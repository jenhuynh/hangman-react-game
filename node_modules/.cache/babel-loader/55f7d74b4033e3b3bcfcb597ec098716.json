{"ast":null,"code":"var _jsxFileName = \"/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/components/Popup.js\";\nimport { select } from 'async';\nimport React, { useEffect } from 'react';\nimport { checkWin } from '../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Popup = ({\n  correctLetters,\n  wrongLetters,\n  selectedWord,\n  setPlayable\n}) => {\n  let finalMessage = ' ';\n  let finalMessageRevealWord = '';\n  let playable = true; //passing props to check if we win or lose\n\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\n    finalMessage = 'Congratulations! You won!'; //still playable if we did not win or lose\n\n    playable = false;\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\n    finalMessage = \"You lost.\";\n    finalMessageRevealWord = `The word was: ${selectedWord}`;\n    playable = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: finalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: finalMessageRevealWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/components/Popup.js"],"names":["select","React","useEffect","checkWin","Popup","correctLetters","wrongLetters","selectedWord","setPlayable","finalMessage","finalMessageRevealWord","playable"],"mappings":";AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA;AAA7C,CAAD,KAA+D;AAC1E,MAAIC,YAAY,GAAG,GAAnB;AACA,MAAIC,sBAAsB,GAAG,EAA7B;AACA,MAAIC,QAAQ,GAAG,IAAf,CAH0E,CAI7E;;AACG,MAAIR,QAAQ,CAACE,cAAD,EAAiBC,YAAjB,EAA+BC,YAA/B,CAAR,KAAyD,KAA7D,EAAoE;AACjEE,IAAAA,YAAY,GAAG,2BAAf,CADiE,CAEjE;;AACAE,IAAAA,QAAQ,GAAG,KAAX;AACF,GAJD,MAIO,IAAIR,QAAQ,CAACE,cAAD,EAAiBC,YAAjB,EAA+BC,YAA/B,CAAR,KAAyD,MAA7D,EAAoE;AACxEE,IAAAA,YAAY,GAAG,WAAf;AACAC,IAAAA,sBAAsB,GAAI,iBAAgBH,YAAa,EAAvD;AACAI,IAAAA,QAAQ,GAAG,KAAX;AACF;;AAGA,sBACC;AAAA,2BAEC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACG;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACC;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADD,eAEE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AAFD,mBADD;AAYH,CA5BD;;KAAMN,K;AA8BN,eAAeA,KAAf","sourcesContent":["import { select } from 'async';\nimport React, { useEffect} from 'react'\nimport {checkWin} from '../helpers/helpers'\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable}) => {\n   let finalMessage = ' ';\n   let finalMessageRevealWord = '';\n   let playable = true;\n//passing props to check if we win or lose\n   if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ){\n      finalMessage = 'Congratulations! You won!'\n      //still playable if we did not win or lose\n      playable = false;\n   } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose'){\n      finalMessage = \"You lost.\"\n      finalMessageRevealWord = `The word was: ${selectedWord}`;\n      playable = false;\n   }\n\n   \n    return (\n     <>\n     {/* Container for final message */}\n      <div className=\"popup-container\">\n         <div class=\"popup\">\n          <h2>{finalMessage}</h2>\n           <h3>{finalMessageRevealWord}</h3>\n           <button>Play Again</button>\n        </div>\n        </div>\n     </>\n    )\n}\n\nexport default Popup"]},"metadata":{},"sourceType":"module"}