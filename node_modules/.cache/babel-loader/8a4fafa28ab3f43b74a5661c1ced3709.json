{"ast":null,"code":"var _jsxFileName = \"/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst words = ['animal', 'code', 'animate', 'flavor'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  _s();\n\n  //useState to keep track and see if the game is playable, initially set to true\n  const [playable, setPlayable] = useState(true); //useState to keep track of correct letters, initially set to empty array\n\n  const [correctLetters, setCorrectLetters] = useState([]); //useState to keep track of wrong letters, initially set to empty array\n\n  const [wrongLetters, setWrongLetters] = useState([]); //useEffect meant to be a side effect of the app\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      //destructure function\n      const {\n        key,\n        keyCode\n      } = event;\n    };\n  }); // Keydown letter press\n\n  window.addEventListener('keydown', e => {\n    if (playable) {\n      if (e.keyCode >= 65 && e.keyCode <= 90) {\n        const letter = e.key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            correctLetters.push(letter);\n            displayWord();\n          } else {\n            showNotification();\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            wrongLetters.push(letter);\n            updateWrongLettersEl();\n          } else {\n            showNotification();\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"e5e1/vS//Q5HuIkZOZamQQ24YxE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","words","selectedWord","Math","floor","random","length","App","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","handleKeydown","event","key","keyCode","window","addEventListener","e","letter","toLowerCase","includes","push","displayWord","showNotification","updateWrongLettersEl"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,WAAP;;;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,QAA9B,CAAd;AAEA,IAAIC,YAAY,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC,CAFa,CAGf;;AACE,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD,CAJa,CAKf;;AACE,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD,CANa,CAQb;;AACFC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,aAAa,GAAGC,KAAK,IAAI;AAC7B;AACA,YAAM;AAACC,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAiBF,KAAvB;AACD,KAHD;AAID,GALQ,CAAT,CATe,CAeb;;AACFG,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,CAAC,IAAI;AACvC,QAAIZ,QAAJ,EAAc;AACb,UAAIY,CAAC,CAACH,OAAF,IAAa,EAAb,IAAmBG,CAAC,CAACH,OAAF,IAAa,EAApC,EAAwC;AACvC,cAAMI,MAAM,GAAGD,CAAC,CAACJ,GAAF,CAAMM,WAAN,EAAf;;AAEA,YAAIpB,YAAY,CAACqB,QAAb,CAAsBF,MAAtB,CAAJ,EAAmC;AAClC,cAAI,CAACX,cAAc,CAACa,QAAf,CAAwBF,MAAxB,CAAL,EAAsC;AACrCX,YAAAA,cAAc,CAACc,IAAf,CAAoBH,MAApB;AAEAI,YAAAA,WAAW;AACX,WAJD,MAIO;AACNC,YAAAA,gBAAgB;AAChB;AACD,SARD,MAQO;AACN,cAAI,CAACd,YAAY,CAACW,QAAb,CAAsBF,MAAtB,CAAL,EAAoC;AACnCT,YAAAA,YAAY,CAACY,IAAb,CAAkBH,MAAlB;AAEAM,YAAAA,oBAAoB;AACpB,WAJD,MAIO;AACND,YAAAA,gBAAgB;AAChB;AACD;AACD;AACD;AACD,GAxBD;AA2BE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAExB,YAApB;AAAkC,QAAA,cAAc,EAAEQ;AAAlD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAaD;;GAxDQH,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport React, { useState, useEffect} from 'react';\nimport Header from './components/Header'\nimport Figure from './components/Figure'\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nimport './App.css';\n\nconst words = ['animal', 'code', 'animate', 'flavor'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n \nfunction App() {\n  //useState to keep track and see if the game is playable, initially set to true\n  const [playable, setPlayable] = useState(true);\n//useState to keep track of correct letters, initially set to empty array\n  const [correctLetters, setCorrectLetters] = useState([]);\n//useState to keep track of wrong letters, initially set to empty array\n  const [wrongLetters, setWrongLetters] = useState([]);\n\n  //useEffect meant to be a side effect of the app\nuseEffect(() => {\n  const handleKeydown = event => {\n    //destructure function\n    const {key, keyCode} = event;\n  }\n});\n  // Keydown letter press\nwindow.addEventListener('keydown', e => {\n\tif (playable) {\n\t\tif (e.keyCode >= 65 && e.keyCode <= 90) {\n\t\t\tconst letter = e.key.toLowerCase();\n\n\t\t\tif (selectedWord.includes(letter)) {\n\t\t\t\tif (!correctLetters.includes(letter)) {\n\t\t\t\t\tcorrectLetters.push(letter);\n\n\t\t\t\t\tdisplayWord();\n\t\t\t\t} else {\n\t\t\t\t\tshowNotification();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!wrongLetters.includes(letter)) {\n\t\t\t\t\twrongLetters.push(letter);\n\n\t\t\t\t\tupdateWrongLettersEl();\n\t\t\t\t} else {\n\t\t\t\t\tshowNotification();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure />\n        <WrongLetters />\n        {/* passing selectedWord and correctedLetters props in word component*/}\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup />\n      <Notification />\n    </> \n  );\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}