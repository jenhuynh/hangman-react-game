{"ast":null,"code":"var _jsxFileName = \"/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/components/Popup.js\";\nimport React from 'react';\nimport { checkWin } from '../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Popup = ({\n  correctLetters,\n  wrongLetters,\n  selectedWord,\n  setPlayable\n}) => {\n  let finalMessage = ' ';\n  let finalMessageRevealWord = '';\n  let playable = true;\n  if (checkWin()) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: finalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: finalMessageRevealWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/jenhh/src/techtonica-assignments/hangman-game-react/src/components/Popup.js"],"names":["React","checkWin","Popup","correctLetters","wrongLetters","selectedWord","setPlayable","finalMessage","finalMessageRevealWord","playable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA;AAA7C,CAAD,KAA+D;AAC1E,MAAIC,YAAY,GAAG,GAAnB;AACA,MAAIC,sBAAsB,GAAG,EAA7B;AACA,MAAIC,QAAQ,GAAG,IAAf;AAEA,MAAIR,QAAQ,EAAZ,EACC,oBACC;AAAA,2BAEC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACG;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACC;AAAA,oBAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,gBADD,eAEE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AAFD,mBADD;AAYH,CAlBD;;KAAMN,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport {checkWin} from '../helpers/helpers'\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable}) => {\n   let finalMessage = ' ';\n   let finalMessageRevealWord = '';\n   let playable = true;\n\n   if (checkWin())\n    return (\n     <>\n     {/* Container for final message */}\n      <div className=\"popup-container\">\n         <div class=\"popup\">\n          <h2>{finalMessage}</h2>\n           <h3>{finalMessageRevealWord}</h3>\n           <button>Play Again</button>\n        </div>\n        </div>\n     </>\n    )\n}\n\nexport default Popup"]},"metadata":{},"sourceType":"module"}